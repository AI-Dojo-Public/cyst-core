import unittest

from environment.exploit import Exploit, ExploitCategory, ExploitStore


class TestExploitStore(unittest.TestCase):
    def test_exploits(self):
        e1 = Exploit("1", ["s1", "s2"], ExploitCategory.AUTH_MANIPULATION)
        e2 = Exploit("2", ["s2"], ExploitCategory.REMOTE_EXECUTION)
        e3 = Exploit("", ["s1", "s2", "s3"])

        ExploitStore().add_exploit(e1, e2, e3)

        r1 = ExploitStore().get_exploit("1")
        r2 = ExploitStore().get_exploit("3")
        r3 = ExploitStore().get_exploit(service="s2")
        r4 = ExploitStore().get_exploit(category=ExploitCategory.AUTH_MANIPULATION)
        r5 = ExploitStore().get_exploit(category=ExploitCategory.NONE)

        self.assertEqual(r1, [e1], "Selection by id")
        self.assertEqual(r2, [], "Wrong id specified")
        self.assertEqual(set(r3), {e1, e2, e3}, "Selection of multiple exploits")
        self.assertEqual(r4, [e1], "Selection by category")
        self.assertEqual(r5, [], "Trying to get NONE category yields nothing")


if __name__ == '__main__':
    unittest.main()
